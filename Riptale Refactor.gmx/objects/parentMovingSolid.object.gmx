<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>parentSolid</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables unique to moving entities

event_inherited();

x_speed             = 0;        // Speed on the x-axis
y_speed             = 0;        // Speed on the y-axis

x_last              = x;        // Last position on x-axis
y_last              = y;        // Last position on y-axis

x_next              = x;        // Potential next x
y_next              = y;        // Potential next y

x_speedMax          = 0;        // Maximum speed on x-axis
y_speedMax          = 0;        // Maximum speed on y-axis

acceleration        = 0;        // Acceleration

jumpStrength        = 0;        // Ascend speed
jumpMin             = 0;        // Minimum jump strength

moveDirection       = 0;        // Direction

applyGravity        = 1;        // If the object should have gravity

applyFriction       = 1;        // If the object should have friction

grounded            = 0;        // If the object is on ground

bounce              = 0;        // If the object will bounce on the ground

terminalVelocity    = 7;        // Highest possible fall speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculate movement variables

event_inherited();

x_last              = x;        // Last position on x-axis
y_last              = y;        // Last position on y-axis

// Calculate next step

x_next = x + x_speed;
y_next = y + y_speed;

// Check movement direction

moveDirection = point_direction(x, y, x_next, y_next);

// Check if grounded. Note there is some threshold both ways for tighter feeling controls.

grounded = place_meeting(x_last, y_last + 3, parentSolid);

// Update facing if speed is not 0

if x_speed != 0
{
    facing = sign(x_speed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
